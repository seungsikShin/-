# 파일 내용 읽기 함수 - 응급 수정 버전
def extract_file_content(file_path: str) -> str:
    """
    응급 수정: 일단 파일명만 반환하여 앱이 작동하도록 함
    """
    try:
        file_name = os.path.basename(file_path)
        file_ext = os.path.splitext(file_path)[1].lower()
        
        return f"[파일 업로드됨: {file_name}]\n[파일 형식: {file_ext}]\n[내용 분석 기능은 추후 활성화 예정]"
    
    except Exception as e:
        return f"[파일 처리 중 오류 발생: {str(e)}]"

# GPT 보고서 생성 함수도 임시 수정
def generate_audit_report_with_gpt_optimized(submission_id, department, manager, phone, contract_name,
                                           contract_date, contract_amount, uploaded_files, missing_files_with_reasons):
    """
    응급 버전: 파일 내용 읽기 없이 기본 정보만으로 보고서 생성
    """
    try:
        # 파일 목록만 포함 (내용 읽기 제외)
        uploaded_list = ""
        if uploaded_files:
            uploaded_list = "## 제출된 자료\n\n"
            for file_name in uploaded_files:
                uploaded_list += f"- {file_name}\n"
        else:
            uploaded_list = "제출된 자료: 없음\n\n"
        
        # 누락 자료 정리
        missing_content = ""
        if missing_files_with_reasons:
            missing_content = "## 누락된 자료 및 사유\n\n"
            missing_content += "\n".join([f"- **{name}**: {reason}" for name, reason in missing_files_with_reasons])
        else:
            missing_content = "누락된 자료: 없음\n\n"
        
        # 단순화된 프롬프트
        user_message = f"""
일상감사 보고서 초안을 작성해주세요.

## 기본 정보
**접수 ID**: {submission_id}
**접수 부서**: {department}  
**담당자**: {manager} (연락처: {phone})
**계약명**: {contract_name}
**계약 체결일**: {contract_date}
**계약금액**: {contract_amount}

{uploaded_list}

{missing_content}

위 정보를 바탕으로 일상감사 보고서 초안을 작성해주세요.
"""
        
        # GPT 응답 받기
        answer, success = get_clean_answer_from_gpts(user_message)
        if not success:
            return None

        # 간단한 Word 문서 생성 (python-docx 없이)
        # 일단 텍스트 파일로 저장
        report_folder = os.path.join(base_folder, "draft_reports")
        os.makedirs(report_folder, exist_ok=True)
        report_path = os.path.join(report_folder, f"감사보고서초안_{submission_id}.txt")
        
        with open(report_path, 'w', encoding='utf-8') as f:
            f.write("일상감사 보고서 초안\n")
            f.write("=" * 50 + "\n\n")
            f.write(f"접수 ID: {submission_id}\n")
            f.write(f"접수 부서: {department}\n")
            f.write(f"담당자: {manager} ({phone})\n")
            f.write(f"계약명: {contract_name}\n")
            f.write(f"계약 체결일: {contract_date}\n")
            f.write(f"계약금액: {contract_amount}\n\n")
            f.write("=" * 50 + "\n\n")
            f.write(answer)
        
        return report_path

    except Exception as e:
        logger.error(f"GPT 보고서 생성 오류: {str(e)}")
        return None
